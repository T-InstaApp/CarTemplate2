name: BuildAndDeployAPK

on:
  push:
    paths:
      - .github/workflows/build.yml

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      apk_name: Muncheese
      updated_app_name: NK

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Update AndroidManifest.xml
        run: |
          sed -i "s/android:label=\"[^\"]*\"/android:label=\"${{ env.updated_app_name }}\"/" app/src/main/AndroidManifest.xml

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Set up Git
        run: |
          git config --global user.name "T-InstaApp"
          git config --global user.email "hello@instaapp.online"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.9
          release_name: Release v1.0.9
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename and Upload APK
        run: |
          APK_NAME="${{ env.updated_app_name }}-$apk_name.apk"
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/$APK_NAME
          echo "Uploading APK: $APK_NAME"
          echo "::set-output name=apk_name::$APK_NAME"
          echo "APK_NAME=$APK_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Upload APK as Release Asset
        id: upload_apk
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/${{ env.APK_NAME }}
          asset_name: ${{ env.APK_NAME }}
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: niraj07.k@gmail.com
          password: ${{ secrets.GMAIL_TOKEN }}
          from: niraj07.k@gmail.com
          subject: APK Build Notification
          body: |
            Here is the link to download the APK:
            ${{ steps.upload_apk.outputs.browser_download_url }}
          to: niraj.kumar@tissatech.com

      - name: Call API
        run: |
          $env:BASE_URL = "http://premisafe.com/production/download_api.php"
          $API_URL = "$env:BASE_URL/data?url=${{ steps.upload_apk.outputs.browser_download_url }}"
          $response = Invoke-RestMethod -Uri $API_URL
          Write-Host "API Response: $response"
